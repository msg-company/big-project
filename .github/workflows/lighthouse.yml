name: Lighthouse CI
on:
  push:
    branches: [main]
    paths:
      - "apps/frontend/**"
  pull_request:
    branches: [main]
    paths:
      - "apps/frontend/**"

# Объявляем ограниченные разрешения по умолчанию
permissions:
  contents: read # минимально необходимое разрешение для checkout
  pull-requests: read # для PR событий
  
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@b6849436894e144dbce29d7d7fda2ae3bf9d8365 # v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@72476173717e9fa92b08abe87e9c9dc3a42dc0c8 # v4
        with:
          node-version-file: ".nvmrc"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '9.14.4'
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: pnpm turbo build --filter=sso

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.0
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.event.pull_request.head.sha || github.sha }}
          LHCI_BUILD_CONTEXT__CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci/
